- name: Install Minikube and kubectl
  shell: |
    curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
    install minikube-linux-amd64 /usr/local/bin/minikube
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
  args:
    creates: /usr/local/bin/minikube

- name: Remove any stale mlops.local and kibana.local entries from /etc/hosts
  become: true
  shell: |
    sed -i '/mlops\.local/d' /etc/hosts
    sed -i '/kibana\.local/d' /etc/hosts

- name: More thorough Minikube cleanup
  shell: |
    # Stop minikube with increased timeout
    minikube stop --all=true || true
    # Delete minikube with purge
    minikube delete --all --purge || true
    
    # Kill any lingering minikube processes
    pkill -f minikube || true
    
    # Remove docker containers more thoroughly
    for container in $(docker ps -a --filter "name=k8s_" --format "{{.ID}}") $(docker ps -a --filter "name=minikube" --format "{{.ID}}"); do
      docker stop $container || true
      docker rm -f $container || true
    done
    
    # Prune docker resources
    docker network prune -f
    docker volume prune -f
    
    # Remove minikube files
    rm -rf ~/.minikube ~/.kube
    
    # Clean docker system
    docker system prune -f
    
    # Verify all minikube processes are gone
    ps aux | grep -i minikube || true
  ignore_errors: true

- name: Sleep for longer to ensure cleanup is complete
  pause:
    seconds: 20

- name: Verify Docker status
  shell: docker info
  register: docker_info
  ignore_errors: true

- name: Start Minikube with increased memory and specific parameters
  shell: |
    # Fresh start with explicit cleanup
    MINIKUBE_HOME=~/.minikube minikube start --driver=docker --memory=3g --cpus=2 --kubernetes-version=stable --delete-on-failure=true
  become: false
  register: minikube_start
  environment:
    PATH: "{{ ansible_env.PATH }}"
  retries: 2
  delay: 10
  until: minikube_start.rc == 0

- name: Verify Minikube is running properly
  shell: minikube status
  become: false
  register: minikube_status
  environment:
    PATH: "{{ ansible_env.PATH }}"
  retries: 2
  delay: 5
  until: minikube_status.rc == 0

- name: Enable Ingress controller in Minikube
  shell: minikube addons enable ingress
  become: false
  environment:
    PATH: "{{ ansible_env.PATH }}"
  register: ingress_enable
  retries: 3
  delay: 10
  until: ingress_enable.rc == 0

- name: Get Minikube IP
  shell: minikube ip
  become: false
  register: minikube_ip
  environment:
    PATH: "{{ ansible_env.PATH }}"
  retries: 3
  delay: 5
  until: minikube_ip.rc == 0

- name: Add mlops.local and kibana.local to /etc/hosts
  become: true
  lineinfile:
    path: /etc/hosts
    line: "{{ minikube_ip.stdout }} {{ item }}"
    state: present
  with_items:
    - mlops.local
    - kibana.local